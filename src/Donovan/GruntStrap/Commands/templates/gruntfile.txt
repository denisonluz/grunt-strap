/* jshint node: true */

module.exports = function(grunt) {
  "use strict";

  // Force use of Unix newlines
  grunt.util.linefeed = '\n';

  // Project configuration.
  grunt.initConfig({

    // Metadata.
    pkg: grunt.file.readJSON('package.json'),
    banner: '/*!\n' +
              ' * Bootstrap v3.03 ("http://getbootstrap.com")\n' +
              ' * Copyright <%= grunt.template.today("yyyy") %> Twitter, Inc.\n' +
              ' * Licensed under Apache-2.0 , http://www.apache.org/licenses/LICENSE-2.0\n' +
              ' */\n\n',
    jqueryCheck: 'if (typeof jQuery === "undefined") { throw new Error("Bootstrap requires jQuery") }\n\n',
    projectBanner:'/*!\n' +
              ' * Project Name v<%= pkg.version %>\n' +
              ' * Copyright <%= grunt.template.today("yyyy") %>  Author goes here\n' +
              ' */\n\n',

    assetsFolder: "{{ASSETS_FOLDER}}",
    bowerFolder: "<%= assetsFolder %>/{{BOWER_FOLDER}}",
    bootstrapFolder: "<%= bowerFolder %>/bootstrap",
    

    
    // Task configuration.
    clean: {
      dist: ['<%= assetsFolder %>/dist']
    },

    jshint: {
      options: {
     
            "asi"      : true,
            "boss"     : true,
            "browser"  : true,
            "curly"    : false,
            "debug"    : true,
            "devel"    : true,
            "eqeqeq"   : false,
            "eqnull"   : true,
            "expr"     : true,
            "laxbreak" : true,
            "laxcomma" : true,
            "validthis": true
          
      },
      gruntfile: {
        src: 'Gruntfile.js'
      },
      src: {
        src: ['<%= assetsFolder %>/js/*.js']
      },
      bootstrap:{
        src: ['<%= bootstrapFolder %>/js/*.js']
      }
    },

    concat: {
      assets: {
        options: {
           banner: '<%= projectBanner %>',
          stripBanners: false
        },
        src: ['<%= assetsFolder %>/js/*.js'],
        dest: '<%= assetsFolder %>/dist/js/project.js'
      },
      bootstrap: {
        options: {
           banner: '<%= banner %><%= jqueryCheck %>',
          stripBanners: false
        },
        src: [
          '<%= bootstrapFolder %>/js/transition.js',
          '<%= bootstrapFolder %>/js/alert.js',
          '<%= bootstrapFolder %>/js/button.js',
          '<%= bootstrapFolder %>/js/carousel.js',
          '<%= bootstrapFolder %>/js/collapse.js',
          '<%= bootstrapFolder %>/js/dropdown.js',
          '<%= bootstrapFolder %>/js/modal.js',
          '<%= bootstrapFolder %>/js/tooltip.js',
          '<%= bootstrapFolder %>/js/popover.js',
          '<%= bootstrapFolder %>/js/scrollspy.js',
          '<%= bootstrapFolder %>/js/tab.js',
          '<%= bootstrapFolder %>/js/affix.js'
        ],
        dest: '<%= assetsFolder %>/dist/js/<%= pkg.name %>.js'
      }
    },
    uglify: {
      assets: {
        options: {
          banner: '<%= projectBanner %>',
          report: 'min'
        },
        src: ['<%= concat.assets.dest %>'],
        dest: '<%= assetsFolder %>/dist/js/project.min.js'
      },
      bootstrap: {
        options: {
          banner: '<%= banner %>',
          report: 'min'
        },
        src: ['<%= concat.bootstrap.dest %>'],
        dest: '<%= assetsFolder %>/dist/js/<%= pkg.name %>.min.js'
      }
    },

    recess: {
      options: {
        compile: true,
        banner: '<%= banner %>'
       
      },
      bootstrap: {
        src: ['<%= assetsFolder %>/less/bootstrap.less'],
        dest: '<%= assetsFolder %>/dist/css/<%= pkg.name %>.css'
      },
      min: {
        options: {
          compress: true      
        },
        src: ['<%= assetsFolder %>/less/bootstrap.less'],
        dest: '<%= assetsFolder %>/dist/css/<%= pkg.name %>.min.css'
      }
    },
    cssmin: {
      add_banner: {
        options: {
          banner: '<%= projectBanner %>'
        },
        files: {
          '<%= assetsFolder %>/dist/css/main.min.css': ['<%= assetsFolder %>/css/**/*.css']
        }
      }
    },

    copy: {     
      bootstrap: {
        cwd: '<%= bootstrapFolder %>/dist',
        expand: true,
        src: ["fonts/**"],
        dest: '<%= assetsFolder %>/dist/'
      },
      fontAwesome: {
        cwd: '<%= bowerFolder %>/font-awesome',
        expand: true,
        src: ["fonts/**",
              "css/**"],
        dest: '<%= assetsFolder %>/dist/'
      },
       project: {
        cwd: '<%= assetsFolder %>',
        expand: true,
        src: ['fonts/**',
        'ico/**',
        'images/**',
        'js/**',
        'css/**'],
        dest: '<%= assetsFolder %>/dist/'
      },
      publishPublic: {
        cwd: '<%= assetsFolder %>/dist',
        expand: true,
        src: ["*/**"],
        dest: 'public/assets'
      },
 
 
    },


    connect: {
      server: {
        options: {
          port: 3000,
          base: '.'
        }
      }
    },


    watch: {
      src: {
        files: ['<%= assetsFolder %>/js/*.js',
        '<%= assetsFolder %>/css/*.css',
        '<%= assetsFolder %>/fonts/*.*', 
        '<%= assetsFolder %>/less/*.less', 
        '<%= assetsFolder %>/images/*.*', 
        '<%= assetsFolder %>/ico/*.*'],
        tasks: ['default']
      }
    },




  });


  // These plugins provide necessary tasks.
  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-connect');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  
  // this is Twitter Bootstraps LESS processor
  grunt.loadNpmTasks('grunt-recess');


  // JS distribution task.
  grunt.registerTask('dist-js', ['jshint','concat', 'uglify']);

  // CSS distribution task.
  grunt.registerTask('dist-less', ['recess']);
    // CSS distribution task.
  grunt.registerTask('dist-css', ['cssmin']);

  // Fonts distribution task.
  grunt.registerTask('dist-copy', ['copy']);

  grunt.registerTask('dist-clean', ['clean']);

  // Full distribution task.
  grunt.registerTask('dist', ['clean', 'dist-less', 'dist-css', 'dist-js','dist-copy']);

  // Default task.
  grunt.registerTask('default', ['dist']);

  //grunt.registerTask('default', ['test', 'dist', 'build-customizer']);



};
